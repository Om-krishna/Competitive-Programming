package com.CB.FenwickTree;

import java.util.Scanner;

public class InversionCount {
   public static int[] BIT = new int[10000];

   public static void main(String[] args) {
      Scanner s = new Scanner(System.in);
      int n = s.nextInt();
      int[] nums = new int[n + 1];

      int ans;
      for(ans = 1; ans <= n; ++ans) {
         nums[ans] = s.nextInt();
      }

      ans = 0;

      for(int i = n; i >= 1; --i) {
         ans += query(nums[i] - 1);
         update(nums[i], 1, n);
      }

      System.out.println(ans);
   }

   public static void update(int i, int inc, int n) {
      while(i <= n) {
         int[] var10000 = BIT;
         var10000[i] += inc;
         i += i & -i;
      }

   }

   public static int query(int i) {
      int ans;
      for(ans = 0; i > 0; i -= i & -i) {
         ans += BIT[i];
      }

      return ans;
   }
}
